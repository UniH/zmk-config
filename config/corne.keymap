/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC           |  Q         |  W     |  E     |  R      |  T  |       |  Y      |  U   |  I       |  O     |  P      |  `    |
// | CTRL/TAB      |  A         |  S     |  D     |  F      |  G  |       |  H      |  J   |  K       |  L     |  ;      |  '    |
// | Sticky Shift  |  ALR/Z     |  X     |  C     |  V      |  B  |       |  N      |  M   |  ,       |  .     |  /      | shift |
//                                       | GUI    | LWR     | SPC |       | BKSP    | RSE  | ENT      |
                                     bindings = <
    &mt LCTRL ESC   &kp Q       &kp W    &kp E    &kp R    &kp T         &kp Y     &kp U  &kp I      &kp O    &kp P     &kp GRAVE
    &mt LCTRL TAB   &kp A       &kp S    &kp D    &kp F    &kp G         &kp H     &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
    &sk LSHFT       &mt LALT Z  &kp X    &kp C    &kp V    &kp B         &kp N     &kp M  &kp COMMA  &kp DOT  &kp FSLH  &sk RSHFT
                                         &kp LGUI &mo 1    &kp SPACE     &kp BSPC  &mo 2  &kp RET
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | CAPS        |  1      |  2       |  3      |  4       |  5       |  |    6        |  7       |  8       |  9      |  0      |  -    |
// | CTRL        |  !      |  @       |  #      |  $       |  %       |  |    ^        |  &       |  *       |  (      |  )      |  \    |
// |             |         |  _       |  =      |  {       |  }       |  |    [        |  ]       |  <       |  >      |  ?      |       |
//                                    | GUI     |          | SPC      |  | ALT+BKSP    |          | ALT      |
                        bindings = <
    &kp CAPS     &kp N1    &kp N2     &kp N3    &kp N4     &kp N5         &kp N6        &kp N7     &kp N8     &kp N9    &kp N0    &kp MINUS
    &trans       &kp EXCL  &kp AT     &kp HASH  &kp DLLR   &kp PRCNT      &kp CRRT      &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSLH
    &trans       &kp PLUS  &kp UNDER  &kp EQUAL &kp LBRC   &kp RBRC       &kp LBKT      &kp RBKT   &kp LT     &kp GT    &kp QMARK &trans
                                      &kp LGUI  &trans     &kp SPACE      &kp LA(BSPC)  &trans     &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | BTCLR    | BT1          | BT2         | BT3       | BT4          | BT5       |   |            |              |   up     |             |           |        |
// |          |              |  Â           |           |              |           |   | home       |   left       |  down    |  right      |  end      |        |
// |          |              |             |           |              |           |   | prev       | volume -     |  play    | volume +    |  next     |        |
//                                         | GUI       |              | SPC       |   |            |              |          |
                        bindings = <
   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3  &bt BT_SEL 4     &trans      &trans         &kp UP     &trans        &trans      &trans
   &trans      &trans        &trans        &trans       &trans        &trans          &kp HOME    &kp LEFT       &kp DOWN   &kp RIGHT     &kp END     &trans
   &trans      &trans        &trans        &trans       &trans        &trans           &kp C_PREV  &kp C_VOL_DN   &kp C_PP   &kp C_VOL_UP  &kp C_NEXT  &trans
                    	                   &trans       &trans        &trans           &trans      &trans         &trans
                        >;
                };
        };
};
