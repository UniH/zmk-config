/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        char {
            // -----------------------------------------------------------------------------------------
            // | CTRL/ESC      |  Q         |  W     |  E     |  R      |  T  |       |  Y      |  U   |  I       |  O     |  P      |  -    |
            // | ALT/TAB       |  A         |  S     |  D     |  F      |  G  |       |  H      |  J   |  K       |  L     |  ;      |  '    |
            // | Shift         |  Z         |  X     |  C     |  V      |  B  |       |  N      |  M   |  ,       |  .     |  /      | shift |
            //                                       | GUI    | LWR     | SPC |       | BKSP    | RSE  | ENT      |

            bindings = <
&mt LCTRL ESC  &kp Q  &kp W  &kp E     &kp R  &kp T          &kp Y            &kp U  &kp I      &kp O    &kp P     &kp MINUS
&mt LALT TAB   &kp A  &kp S  &kp D     &kp F  &kp G          &kp H            &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT      &kp Z  &kp X  &kp C     &kp V  &kp B          &kp N            &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                             &kp LGUI  &mo 1  &lt 3 SPACE    &lt 4 BACKSPACE  &mo 2  &kp RET
            >;
        };

        symbo {
            // -----------------------------------------------------------------------------------------
            // | CTRL/CAPS     |  1      |  2       |  3      |  4       |  5       |  |    6        |  7       |  8       |  9      |  0      |  `    |
            // | ALT/TAB       |  !      |  @       |  #      |  $       |  %       |  |    ^        |  &       |  *       |  (      |  )      |  \    |
            // |               |         |  _       |  =      |  {       |  }       |  |    [        |  ]       |  <       |  >      |  ?      |       |
            //                                      | GUI     |          | SPC      |  | ALT+BKSP    |          | ALT      |

            bindings = <
&mt LCTRL CAPS  &kp N1    &kp N2     &kp N3     &kp N4    &kp N5       &kp N6        &kp N7             &kp N8     &kp N9    &kp N0     &kp GRAVE
&trans          &kp EXCL  &kp AT     &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET     &kp AMPS           &kp ASTRK  &kp LPAR  &kp RPAR   &kp BSLH
&kp LSHFT       &kp PLUS  &kp UNDER  &kp EQUAL  &kp LBRC  &kp RBRC     &kp LBKT      &kp RBKT           &kp LT     &kp GT    &kp QMARK  &sk RSHFT
                                     &kp LGUI   &trans    &kp SPACE    &kp LA(BSPC)  &kp RIGHT_COMMAND  &kp RALT
            >;
        };

        function {
            // -----------------------------------------------------------------------------------------
            // |          |             |             |           |              |           |   |            |              |   up     |             | BT1       | BT clear all  |
            // |          |             |  Â           |           |              |           |   | home       |   left       |  down    |  right      |  end      |               |
            // |          |             |             |           |              |           |   | prev       | volume -     |  play    | volume +    |  next     |               |
            //                                        | GUI       | LALT         | SPC       |   |            |              |          |

            bindings = <
&trans  &trans     &trans    &trans     &trans            &trans     &trans      &trans        &kp UP    &trans        &trans      &bt BT_CLR_ALL
&trans  &kp LCTRL  &kp LALT  &kp LSHFT  &kp ESC           &kp TAB    &kp HOME    &kp LEFT      &kp DOWN  &kp RIGHT     &kp END     &bt BT_SEL 0
&trans  &trans     &trans    &trans     &trans            &trans     &kp C_PREV  &kp C_VOL_DN  &kp C_PP  &kp C_VOL_UP  &kp C_NEXT  &bt BT_SEL 1
                             &trans     &kp LEFT_COMMAND  &trans     &trans      &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
&mt LCTRL ESC  &kp F10    &kp F9    &kp F8     &kp F7   &kp F6     &kp Y     &kp U              &kp I      &kp O    &kp P     &kp MINUS
&mt LALT TAB   &kp LCTRL  &kp LALT  &kp LSHFT  &kp ESC  &kp TAB    &kp H     &kp J              &kp K      &kp L    &kp SEMI  &kp SQT
&kp F1         &kp F2     &kp F3    &kp F4     &kp F5   &kp F6     &kp N     &kp M              &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                                    &kp LGUI   &trans   &trans     &kp BSPC  &kp RIGHT_COMMAND  &kp RET
            >;
        };

        layer_4 {
            bindings = <
&mt LCTRL ESC  &kp Q  &kp W  &kp E     &kp R             &kp T        &kp Y    &kp U    &kp I      &kp O     &kp P      &kp MINUS
&mt LALT TAB   &kp A  &kp S  &kp D     &kp F             &kp G        &kp TAB  &kp ESC  &kp RSHFT  &kp RALT  &kp RCTRL  &kp SQT
&kp LSHFT      &kp Z  &kp X  &kp C     &kp V             &kp B        &kp F7   &kp F8   &kp F9     &kp F10   &kp F11    &kp F12
                             &kp LGUI  &kp LEFT_COMMAND  &kp SPACE    &trans   &trans   &kp RET
            >;
        };
    };
};
